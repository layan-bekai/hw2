# -*- coding: utf-8 -*-
"""Assignment 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x9DSlJ2GL_nNM9yigNOOSN3ADSW2VycL
"""

#pip install streamlit

import streamlit as st
import pandas as pd

# Load dataset
df = pd.read_csv('Hourly Earning.csv')

# Set page title and subtitle
st.title("Hourly Earning Visualization Assignment 2")
st.markdown("*Prepared by Layan Bekai*")
st.markdown("---\n\n")

# Visualization 1: Bar Chart
st.header("Average Earnings by Country and Gender Over Time")

st.markdown(
    "This bar chart visualizes the average earnings of different countries and genders over time. "
    "Use the slider to select a specific year to see the earnings distribution for that year."
)

# Create a slider to select the year
selected_year = st.slider("Select a year:", min_value=2013, max_value=2020, value=2018, step=1)

# Filter data for the selected year
filtered_data = df[df['year'] == selected_year]

# Create a bar chart using Streamlit's native bar_chart function
st.bar_chart(filtered_data.groupby(['country', 'gender'])['amount'].mean().unstack())

st.markdown("---\n\n")

# Visualization 3: Scatter Plot for United States
st.header("Earnings Trends in the United States")

st.markdown(
    "This scatter plot illustrates earnings trends in the United States over a selected year range. "
    "Use the slider to choose a specific year range and observe the earnings trends for different genders."
)

# Create a slider to select the year range
min_year_us = df[df['country'] == 'United States']['year'].min()
max_year_us = df[df['country'] == 'United States']['year'].max()
selected_min_year_us, selected_max_year_us = st.slider(
    "Select a year range for the United States:",
    min_value=min_year_us,
    max_value=max_year_us,
    value=(min_year_us, max_year_us),
    step=1
)

# Filter data for the selected year range and the United States
filtered_scatter_data_us = df[(df['year'] >= selected_min_year_us) &
                               (df['year'] <= selected_max_year_us) &
                               (df['country'] == 'United States')]

# Create a scatter plot using Streamlit's native line_chart function
st.line_chart(filtered_scatter_data_us.groupby(['year', 'gender'])['amount'].mean().unstack())

st.markdown("---\n\n")

# Visualization 4: Table with Gender Filter
st.header("Explore Earnings Data in a Table")

st.markdown(
    "This table allows you to explore earnings data with the option to filter by gender. "
    "Select a gender from the dropdown to see earnings data specific to that gender."
)

# Create a checkbox filter for gender
selected_gender = st.checkbox("Filter by Gender")

if selected_gender:
    # Show the table filtered by gender
    gender = st.selectbox("Select Gender:", df['gender'].unique())
    filtered_table_data = df[df['gender'] == gender]
else:
    # Show the full table
    filtered_table_data = df

# Display the filtered table
st.write(filtered_table_data)

# Header for the new visualization
st.header("Custom Visualization with Dropdown Filter")

st.markdown(
    "This custom visualization allows you to explore earnings data by selecting a specific category "
    "from the dropdown menu. The chart displays earnings trends based on your category selection."
)

# Create a filter dropdown
selected_category = st.selectbox("Select a Category:", df['country'].unique())

# Filter the data based on the selected category
filtered_custom_data = df[df['country'] == selected_category]

# Create a custom visualization based on the selected data
# Using st.bar_chart to visualize the 'amount' per 'year' for this example
st.bar_chart(filtered_custom_data.groupby('year')['amount'].sum())

